
<link rel="stylesheet" href="/assest/jsPlumb/demo-all.css">
<link rel="stylesheet" href="/assest/js/flowchartDemo.css">
<link rel="http://code.jquery.com/ui/1.9.2/themes/base/jquery-ui.css" type="text/css"/>
<script src="//ajax.googleapis.com/ajax/libs/jqueryui/1.10.3/jquery-ui.min.js"></script>
<style type="text/css">

    .node {
        border:1px solid black;
        position:absolute !important;
        width:8em;
        height:5em;
        padding: 0.5em;
        z-index:1;
        border-radius:0.5em;
        box-shadow: 2px 2px 19px #aaa;
        background: white;
    }


    #node0 { top:10em; left:22em;}
    #node1 { top:15em; left:32em;}

	
		.simple-nav{
		
			float:left;
			margin:5px;
			
		}
		
		.fork-title{
			background-color:#dadada;
			border-radius:5px;
			padding:0px 5px;
		}
		
		.source-link a{
			color:rgb(12, 110, 187);
			text-decoration:underline;
			
		}
	
		.editing-container{
			width:100%;
			height:400px;
			border:1px solid #dadada;
			border-radius:5px;
		}
		
		.notes-container{
			width:100%;
			margin-top:10px;
			padding:10px 0px;
			border-top:1px solid #dadada;
			border-bottom:1px solid #dadada;
		}
		.actions-container{
			width:100%;
			margin-top:10px;
		}
		
		.actions .btn{
			margin:0px 10px;
		}
		
		.note-item{
			border:1px solid #dadada;
			background-color:#dadada;
			border-radius:5px;
			padding:5px;
		}
		
		.block-title{
			font-weight:bold;
			font-size:20px;
			margin:5px;
		}
		
		
</style>
<script>
    $(document).ready(function() {
	
		var diagramData = {};
		
		$('.save-changes').on('click',function(event){
		
			var $this = $(this);
			var $target = $(event.target);
			
			//Serialize the object
			$.post("'/diagrams/create", diagramData );
			
		});

        DragEl(".node");
        ResizeEl(".node");
        Repaint();
        Line("node0", "node1");

        $('#editor').dblclick(function(e) {

            var $target = $(e.target);
            console.log($target);

            if($target.hasClass('node')){
                console.log($(e.target).attr('id'));
                if (!captureEndpoint) {
                    captureEndpoint = true;
                    startEnd.start = $(e.target).attr('id');
                    $('.link-message').html('Select the ending node');
                    $('.link-message').fadeIn();
                } else {
                    captureEndpoint = false;
                    startEnd.end = $(e.target).attr('id');
                    Line(startEnd.start, startEnd.end);
                    $('.link-message').fadeOut();
                }
                console.log(startEnd);
                console.log(captureEndpoint);
            }
        });

    });
    var captureEndpoint = false;
    var startEnd = {};

    //// functions ////

    // repaint
    function Repaint(){
        $("#editor").resize(function(){
            jsPlumb.repaintEverything();
        });
    }
    // размер
    function ResizeEl(el){
        $(el).resizable();
    }
    // drag
    function DragEl(el){
        jsPlumb.draggable($(el));
    }

    // save
    function Save() {
        // $(".node").resizable("destroy");
        var db = new Firebase('https://robertdo.firebaseio.com/');
        Objs = [];
        $('.node').each(function() {
            Objs.push({id:$(this).attr('id'), html:$(this).html(),left:$(this).css('left'),top:$(this).css('top'),width:$(this).css('width'),height:$(this).css('height')});
        });

        var data = {data: Objs};
        db.set(data);
        console.log(JSON.stringify(Objs));
    }

    // load
    function Load() {
        var Objs = new Firebase('https://robertdo.firebaseio.com/data/');
        Objs.on('value', function(snapshot) {

            console.log(snapshot.val().height);
        });
        // var s="";
        // for(var i in Objs) {
        //     var o = Objs[i];
        //     console.log(o);
        //     s+='<div id="'+ o.id+'" class="node" style="left:'+ o.left+'; top:'+ o.top+'; width:'+ o.width +'; height:'+ o.height +' "> '+ o.html+'</div>';
        // }
        // $('#editor').html(s);

        ResizeEl(".node");
        DragEl(".node");
        Line("node0", "node1")
    }

    var links = [];

    // connection
    function Line(el1, el2){
        var e0 = jsPlumb.addEndpoint(el1),
                e1 = jsPlumb.addEndpoint(el2);
        jsPlumb.connect({ source:e0, target:e1 });
        links.push({start: el1, end: el2});
        console.log(links);
    }

    // clear
    function Clear() {
        jsPlumb.reset();
        $('.node').remove();
        $('.point').remove();
    }

    function AddNode() {
        var lastId = parseInt($('.node').last().attr('id').substring(4));
        lastId++;
        $('#editor').append('<div id="node' + lastId + '" class="node"></div>');
        DragEl(".node");
    }

    function AddLink() {
        $('.link-message').fadeIn();
    }

</script>

  <div class="container">

			<div class="context-info clearfix">
				<div class="source-link simple-nav"><a href="#">Main Diagram</a>&nbsp ></div>
				<div class="simple-nav fork-title" contentEditable="true">&nbsp;New Untitled Diagram</div>
			</div>
			
			
			<div class="editing-container">
				
				<div id="editor">
				  <div id="node0" class="node" contentEditable='true'>node 0</div>
				  <div id="node1" class="node">node 1</div>
				</div>
				<div>
				  <input type='button' value='Save' onclick='Save()'>
				  <input type='button' value='Load' onclick='Load()'>
				  <input type='button' value='Clear' onclick='Clear()'>
				  <input type='button' value='Add Node' onclick='AddNode()'>
				  <input type='button' value='Add Link' onclick='AddLink()'>

				</div>
				<div class="link-message">
					Select the starting node
				</div>
				
			</div>
			
			
			
			<div class="notes-container">
				<div class="block-title">Notes</div>
					<div class="notes">
						<div contentEditable="true" class="note-item">
							Add some notes for your changes.
						</div>
					</div>
				
			</div>
			
			
			
			<div class="actions-container">
				<div class="row-fluid">
				
					<div class="span8">
						
					</div>
					
					<div class="span4 actions">
						<div class="btn btn-success pull-right save-changes">Save Changes</div>
						<div class="btn btn-inverse pull-right cancel-changes">Cancel</div>
					</div>
				</div>
			</div>
			
			
            <footer>
                <p>&copy; Company 2012</p>
            </footer>

        </div> <!-- /container -->


